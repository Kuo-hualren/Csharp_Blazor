@page "/punchIn/2/{id:int}"
@inject IEmployeeService EmployeeService
@inject IJSRuntime JSRuntime
@using EmployRec.Shared

<h3>PunchIn</h3>


<div style="text-align: center;">
    <div id="reader" style="width: 500px; margin:auto 0;"></div>
    <div id="show" style="display: none;">
        <h1>打卡上班紀錄</h1>
        <p style="color: blue; " id="result"></p>
    </div>
</div>
<br />

<div style="display: @displayStyle">
    <br />
    <div>
        <h2>姓名   @inputValue</h2>
    </div>
    <br />
    <div>
        <h2>員工編號   @punc2.PunchId</h2>
    </div>
    <br />
    <div>
        <h2>日期  @punc2.Time</h2>
    </div>

    <br />
</div>

@*<button class="btn btn-primary" @onclick="GetInputValue">顯示</button>*@
<button class="btn btn-primary" @onclick="HandleSubmit">打卡上班</button>
<div style="height:400px; width:1200px; display: @displayShow;" @onmousemove="GetInputValue"></div>




@code {
    [Parameter]
    public int? Id { get; set; }


    Puns2 punc2 = new Puns2 { };

    protected override async Task OnInitializedAsync()
    {

        await EmployeeService.GetPunch2();
    }

    protected override async Task OnParametersSetAsync()
    {
        punc2.Id = EmployeeService.Ps2.Count + 1;
        punc2.Name = EmployeeService.Ps2[0].Name;
        punc2.PunchId = EmployeeService.Ps2[0].PunchId;
        punc2.Time = DateTime.Now.ToString("yyyy/MM/dd");

    }

    async Task HandleSubmit()
    {

        punc2.Id = 0;
        punc2.PunchIn = DateTime.Now;
        punc2.Time = DateTime.Now.ToString("yyyy/MM/dd");
        punc2.PunchId = EmployeeService.Ps2[0].PunchId;

        await EmployeeService.CreatePunIn2(punc2);

    }

    private IJSObjectReference? module;
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("loadQrScript");
            JSRuntime.InvokeVoidAsync("startQrScanner");

        }
    }



    private string inputValue { get; set; }
    private string displayStyle = "none";
    private string displayShow = "block";

    private async Task GetInputValue()
    {
        module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/PunchIn2.razor.js");
        // 使用 IJSRuntime 呼叫 JavaScript 函數
        inputValue = await module.InvokeAsync<string>("GetValue");
        Console.WriteLine(inputValue);
        StateHasChanged(); // 更新組件的狀態，以便刷新顯示的值
        displayStyle = "block";
        displayShow = "none";

    }
}
