@page "/create"
@inject IEmployeeService EmployeeService



<PageTitle>Update Record</PageTitle>
<h3>Update Record</h3>

<EditForm Model="employee" OnSubmit="HandleSubmit">
    <div>
        <lebal for="Name">姓名</lebal>
        <InputText id="Name" @bind-Value="employee.Name" class="form-control"></InputText>
    </div>
    <div>
        <lebal for="Phone">手機</lebal>
        <InputText id="Phone" @bind-Value="employee.Phone" class="form-control"></InputText>
    </div>
    <div>
        <lebal for="Position">職位</lebal>
        <InputText id="Position" @bind-Value="employee.Position" class="form-control"></InputText>
    </div>
    <div>
        <label>日期</label><br />
        <InputSelect @bind-Value="employee.RecordId" class="form-select">
            @foreach (var record in EmployeeService.Records)
            {
                <option value="@record.Id">@record.Time</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">create</button>
    
</EditForm>







@code {



    Employee employee = new Employee { Record = new Record() };

    protected override async Task OnInitializedAsync()
    {

        await EmployeeService.GetRecords();
    }

    protected override async Task OnParametersSetAsync()
    {


        employee.Record = EmployeeService.Records[0];
        employee.RecordId = employee.Record.Id;


    }

    async Task HandleSubmit()
    {


        await EmployeeService.CreateEmployee(employee);
        string s = DateTime.Now.ToString();
        Console.WriteLine(s);

    }

    
    

    

}
